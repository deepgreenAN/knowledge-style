// 色関係のクラスを定義

@use 'sass:list';

$color-list: "red", "blue", "green", "yellow", "orange", "purple", "pink", "light-blue", "light-green"; // --color-* 変数に対応
// $color-list: "red", "blue";

// colorについて
@for $i from 1 through list.length($color-list) {
    .#{list.nth($color-list, $i)} {
        color: var(--cs-color-#{list.nth($color-list, $i)});

        strong, .cm-strong {
            color: var(--cs-secondary-color);
        }
    }
}

// bg-colorについて
@for $i from 1 through list.length($color-list) {
    .bg-#{list.nth($color-list, $i)} {
        background-color: rgba(var(--cs-color-#{list.nth($color-list, $i)}-rgb), 0.8);
    }
}

// text-decoration-colorについて
@for $i from 1 through list.length($color-list) {
    .text-decoration-#{list.nth($color-list, $i)} {
        -webkit-text-decoration-color: var(--cs-color-#{list.nth($color-list, $i)});
                text-decoration-color: var(--cs-color-#{list.nth($color-list, $i)});
    }
}

// border-colorについて
@for $i from 1 through list.length($color-list) {
    .border-#{list.nth($color-list, $i)} {
        border-style: solid;
        border-color:  var(--cs-color-#{list.nth($color-list, $i)});
    }
}

// 各種色テーブルについて
@for $i from 1 through list.length($color-list) {
    .table-#{list.nth($color-list, $i)}  {
        caption {
            color: var(--cs-color-#{list.nth($color-list, $i)});   
        }

        th, td {
            border-style: solid;
            // マークダウン用のCSSの詳細度を無視する．
            &:not(#fake) {
            border-color: var(--cs-color-#{list.nth($color-list, $i)});
            }
        }
        
        th {
            color: var(--cs-color-#{list.nth($color-list, $i)});
            text-align: center;
        }

        tr:nth-child(odd) {
            background-color: rgba(var(--cs-color-#{list.nth($color-list, $i)}-rgb), 0.2);
        }
    }
}
